apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: eks-bb
  name: eks-bb-orders
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: eks-bb-orders
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eks-bb-orders
    spec:
      serviceAccountName: eks-bb-sa
      containers:
        - name: eks-bb-orders
          image: 902812008909.dkr.ecr.ap-south-1.amazonaws.com/eks-bb-orders:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: eks-bb-orders
          resources:
            limits:
              memory: "128Mi"
              cpu: "64m"
          ports:
            - containerPort: 8080
              protocol: "TCP"
---
apiVersion: v1
kind: Service
metadata:
  namespace: eks-bb
  name: eks-bb-orders
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: eks-bb-orders
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: eks-bb
  name: eks-bb-orders
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: eks-saga
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/success-codes: '200'
spec:
  rules:
    - http:
        paths:
          - path: /eks-bb/orders
            pathType: ImplementationSpecific
            backend:
             service:
              name: eks-bb-orders
              port:
               number:  80